<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Advanced on Lamin Sanneh</title><link>http://laminsanneh.com/notes/vue.js/advanced/</link><description>Recent content in Advanced on Lamin Sanneh</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://laminsanneh.com/notes/vue.js/advanced/index.xml" rel="self" type="application/rss+xml"/><item><title>Lifecycle Hooks</title><link>http://laminsanneh.com/notes/vue.js/advanced/lifecycle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/vue.js/advanced/lifecycle/</guid><description> Vuejs Lifecycle Hooks beforeCreate created beforeMount mounted beforeUpdate updated beforeDestroy destroyed</description></item><item><title>Component Anatomy</title><link>http://laminsanneh.com/notes/vue.js/advanced/component-anatomy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/vue.js/advanced/component-anatomy/</guid><description>Vuejs Component Anatomy &amp;lt;template&amp;gt; &amp;lt;span&amp;gt;{{ message }}&amp;lt;/span&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script&amp;gt; import ProductComponent from &amp;#39;@/components/ProductComponent&amp;#39; import ReviewComponent from &amp;#39;@/components/ReviewComponent&amp;#39; export default { components: { // Components that can be used in the template ProductComponent, ReviewComponent }, props: { // The parameters the component accepts message: String, product: Object, email: { type: String, required: true, default: &amp;#39;none&amp;#39;, validator: function (value) { // Should return true if value is valid } } }, data: function () { // Must be a function return { firstName: &amp;#39;Vue&amp;#39;, lastName: &amp;#39;Mastery&amp;#39; } }, computed: { // Return cached values until dependencies change fullName: function () { return `${this.</description></item><item><title>Custom Events</title><link>http://laminsanneh.com/notes/vue.js/advanced/custom-events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/vue.js/advanced/custom-events/</guid><description> Vuejs Custom Events Use props to pass data into child components, custom events to pass data to parent elements. Set listener on component, within its parent:
&amp;lt;button-counter v-on:incrementBy=&amp;#34;incWithVal&amp;#34;&amp;gt;...&amp;lt;/button-counter&amp;gt; Inside parent component:
methods: { incWithVal: function (toAdd) { ... } } Inside button-counter template:
this.$emit(&amp;#39;incrementyBy&amp;#39;, 5)</description></item></channel></rss>