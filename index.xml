<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lamin Sanneh</title><link>http://laminsanneh.com/</link><description>Recent content on Lamin Sanneh</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 18 Jun 2024 10:02:40 +0000</lastBuildDate><atom:link href="http://laminsanneh.com/index.xml" rel="self" type="application/rss+xml"/><item><title>React.js useEffect How to prevent component weird bahaviour due to multiple out of order server fetches</title><link>http://laminsanneh.com/posts/react-js-useeffect-prevent-component-weird-bahaviour-due-multiple-order-server-fetches/</link><pubDate>Tue, 18 Jun 2024 10:02:40 +0000</pubDate><guid>http://laminsanneh.com/posts/react-js-useeffect-prevent-component-weird-bahaviour-due-multiple-order-server-fetches/</guid><description>To prevent out-of-sync Redux dispatches which could result in unexpected behaviors due to asynchronous server requests returning at different times, we need to ensure that we handle component unmounts or updates correctly. This ensures that when a component re-renders or unmounts, for several reasons like a user clicks on another link related to the same component, it does not attempt to set state based on outdated or irrelevant asynchronous responses.</description></item><item><title>Laravel 11 and React 18 Login and Registration tutorial with React Redux Toolkit</title><link>http://laminsanneh.com/posts/laravel-11-react-18-login-registration-tutorial-react-redux-toolkit/</link><pubDate>Tue, 28 May 2024 09:17:32 +0000</pubDate><guid>http://laminsanneh.com/posts/laravel-11-react-18-login-registration-tutorial-react-redux-toolkit/</guid><description>Introduction In this tutorial, we will be setting up an indepth tutorial guide of react.js and laravel 11 system for user authentication and registration. We will be using typescript on the react.js frontned, along with react redux toolkit, but do not worry as youc an follow along even if you only know javascript. React redux toolkit helps with state management. It might be overkill for a simple login registration app like this, but makes life very easy once the app codebase grows.</description></item><item><title>What is Technical Debt?</title><link>http://laminsanneh.com/posts/technical-debt/</link><pubDate>Mon, 02 Sep 2013 09:10:47 +0000</pubDate><guid>http://laminsanneh.com/posts/technical-debt/</guid><description>Introduction As someone who crunches out code, whether moderately or a lot if you’re like me. You must have incurred some technical debt somewhere along the lines.
Development approaches Technical debt is the term given to a certain programming scenario. Assume you had a project with a target deadline. As the technical lead of the project, you are sometimes faced with two decisions which are:
The long and proper way Using this approach is the most ideal way of development.</description></item><item><title>How to set up live reload in 5 easy steps</title><link>http://laminsanneh.com/posts/set-live-reload-5-easy-steps/</link><pubDate>Sun, 16 Jun 2013 09:23:11 +0000</pubDate><guid>http://laminsanneh.com/posts/set-live-reload-5-easy-steps/</guid><description>Manual all the way! When you start out web developing, the appeal to do a lot of stuff manually might be appealing. However, once you step into intermediate to advanced level you will probably be constantly searching for tools to help automate your workflow. One such tool for me is Live Reload.
If you are wondering what this tool does. It enables you to see html changes instantly in your browser as you type.</description></item><item><title>Underscore js, the missing Linq for c-sharp developers</title><link>http://laminsanneh.com/posts/2013-05-22-underscore-js-the-missing-linq-for-c-sharp-developers/</link><pubDate>Wed, 22 May 2013 12:50:17 +0000</pubDate><guid>http://laminsanneh.com/posts/2013-05-22-underscore-js-the-missing-linq-for-c-sharp-developers/</guid><description>Introduction We all have our favourite languages that we feel most comfortable with for various reasons. One such language for me is the c-sharp language. One of the primary reasons why I love the language is a really cool feature called Linq.
I simply cannot emphasize the amount of time this feature has saved me while doing work. It integrates seamlessly into my workflow and find myself almost subconsciously using it.</description></item><item><title>Html5 localStorage, dead simple</title><link>http://laminsanneh.com/posts/html5-localstorage-dead-simple/</link><pubDate>Sat, 20 Apr 2013 09:16:52 +0000</pubDate><guid>http://laminsanneh.com/posts/html5-localstorage-dead-simple/</guid><description>Introduction Lets get something straight, this stuff (Html5 localStorage) should be simple, dead simple, so here we go.
Storing Simple Data (e.g. numbers and strings) localStorage.setItem(keyName, myString);
Notice the capital letter “S“ in localStorage , its necessary.
Don’t worry localStorage is a global variable in your browser, so use it freely from anywhere.
Retrieving Simple Data localStorage.getItem(keyName);
Storing Object localStorage.setItem(keyName, JSON.stringify(yourObject));
When storing objects, you would want to serialize your object into a string using “JSON.</description></item><item><title>What is Cross Origin Resource Sharing and when to use it?</title><link>http://laminsanneh.com/posts/cross-origin-resource-sharing/</link><pubDate>Mon, 08 Apr 2013 09:32:53 +0000</pubDate><guid>http://laminsanneh.com/posts/cross-origin-resource-sharing/</guid><description>The Problem When developing highly ajax enabled applications using javascript, you may not always be fortunate to have both the client and server side of the application be hosted on the same domain. You might be asking, what does this mean? Good question.
I am confident that you know what a domain is. If not, then have a quick look here at the wikipedia article. Ok, so lets say you have a domain named http://www.</description></item><item><title>Staying Sane among all the craziness (keeping up with technology)</title><link>http://laminsanneh.com/posts/staying-sane-craziness-keeping-technology/</link><pubDate>Sat, 06 Apr 2013 09:07:20 +0000</pubDate><guid>http://laminsanneh.com/posts/staying-sane-craziness-keeping-technology/</guid><description>A wiseman’s advice My dad once told me boy. Yes, literally, “boy” was the nickname he gave me for some reason. He said “you will never be satisfied if you always want to keep up with the latest and greatest gadgets”. He also said that sometimes its ok to be behind schedule a little bit. You see, my thought as a young, gadget addicted teenager was that. “This was some excuse he’d come up with just to have some breathing space from getting me the latest video games”.</description></item><item><title>How learning a new programming language can help you become a better programmer?</title><link>http://laminsanneh.com/posts/learning-programming-language-programmer/</link><pubDate>Tue, 19 Feb 2013 09:20:41 +0000</pubDate><guid>http://laminsanneh.com/posts/learning-programming-language-programmer/</guid><description>My Theory I came into first year at the University of Manchester, with a fair knowledge of programming in Java. I was fully aware that there were people out there who were well versed in other languages and using it to solve real life problems. Even with this knowledge, I did not even bother to look into any other because I hadn’t yet known the importance of learning a new programming language.</description></item><item><title>Understanding the ASP.NET MVC 4 Project Structure and Folders</title><link>http://laminsanneh.com/posts/understanding-asp-net-mvc-4-project-structure-folders/</link><pubDate>Sun, 10 Feb 2013 09:24:20 +0000</pubDate><guid>http://laminsanneh.com/posts/understanding-asp-net-mvc-4-project-structure-folders/</guid><description>Introduction When I first started doing Net Mvc programming, one of the first stumbling block I had was understanding the Asp.Net MVC 4 project structure and folders. So I decided to share some of what I know now that I’m comfortable with them. This tutorial applies to both Visual Studio 2010 and Visual Studio 2012, sorry Visual studio 2008 and Visual studio 2005 folks, I was not programming .Net and or C# back in those days.</description></item><item><title>Go বেসিক</title><link>http://laminsanneh.com/notes/go/basic/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/basic/_index.bn/</guid><description/></item><item><title>Introduction</title><link>http://laminsanneh.com/notes/go/basic/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/basic/introduction/</guid><description> Hello World A sample go program is show here.
package main import &amp;#34;fmt&amp;#34; func main() { message := greetMe(&amp;#34;world&amp;#34;) fmt.Println(message) } func greetMe(name string) string { return &amp;#34;Hello, &amp;#34; + name + &amp;#34;!&amp;#34; } Run the program as below:
$ go run hello.go Variables Normal Declaration:
var msg string msg = &amp;#34;Hello&amp;#34; Shortcut:
msg := &amp;#34;Hello&amp;#34; Constants const Phi = 1.618</description></item><item><title>Basic Types</title><link>http://laminsanneh.com/notes/go/basic/types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/basic/types/</guid><description>Strings str := &amp;#34;Hello&amp;#34; Multiline string
str := `Multiline string` Numbers Typical types
num := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(&amp;#39;a&amp;#39;) // byte (alias for uint8) Other Types
var u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.</description></item><item><title>অ্যাডভান্সড</title><link>http://laminsanneh.com/notes/go/advanced/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/advanced/_index.bn/</guid><description/></item><item><title>Flow Control</title><link>http://laminsanneh.com/notes/go/basic/flow-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/basic/flow-control/</guid><description>Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;) Switch switch day { case &amp;#34;sunday&amp;#34;: // cases don&amp;#39;t &amp;#34;fall through&amp;#34; by default! fallthrough case &amp;#34;saturday&amp;#34;: rest() default: work() } Loop for count := 0; count &amp;lt;= 10; count++ { fmt.Println(&amp;#34;My counter is at&amp;#34;, count) } entry := []string{&amp;#34;Jack&amp;#34;,&amp;#34;John&amp;#34;,&amp;#34;Jones&amp;#34;} for i, val := range entry { fmt.</description></item><item><title>File Manipulation</title><link>http://laminsanneh.com/notes/go/advanced/files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/advanced/files/</guid><description> Condition if day == &amp;#34;sunday&amp;#34; || day == &amp;#34;saturday&amp;#34; { rest() } else if day == &amp;#34;monday&amp;#34; &amp;amp;&amp;amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(&amp;#34;Uh oh&amp;#34;)</description></item><item><title>Bash Variables</title><link>http://laminsanneh.com/notes/bash/basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/bash/basic/</guid><description> Variable NAME=&amp;#34;John&amp;#34; echo $NAME echo &amp;#34;$NAME&amp;#34; echo &amp;#34;${NAME} Condition if [[ -z &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is empty&amp;#34; elif [[ -n &amp;#34;$string&amp;#34; ]]; then echo &amp;#34;String is not empty&amp;#34; fi</description></item><item><title>Go এর নোট সমূহ</title><link>http://laminsanneh.com/notes/go/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/_index.bn/</guid><description>Go Notes</description></item><item><title>নোট সমূহ</title><link>http://laminsanneh.com/notes/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/_index.bn/</guid><description/></item><item><title>ব্যাশের নোট সমূহ</title><link>http://laminsanneh.com/notes/bash/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/bash/_index.bn/</guid><description>Bash Notes</description></item></channel></rss>