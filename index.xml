<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lamin Sanneh</title><link>http://laminsanneh.com/</link><description>Recent content on Lamin Sanneh</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 09 Nov 2024 14:11:14 +0000</lastBuildDate><atom:link href="http://laminsanneh.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Local Modules and Packages - Understand How to Create and Use Them</title><link>http://laminsanneh.com/posts/2024-11-09-go-modules-and-packages---understand-and-create-them/</link><pubDate>Sat, 09 Nov 2024 14:11:14 +0000</pubDate><guid>http://laminsanneh.com/posts/2024-11-09-go-modules-and-packages---understand-and-create-them/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>When building applications in Go, modularizing your code into separate modules and packages is essential for maintaining clean and reusable code. In this tutorial, we’ll walk through creating two local Go modules: &lt;code>restapi01/backend&lt;/code> and &lt;code>restapi/maincaller&lt;/code>. The &lt;code>backend&lt;/code> module will serve as a basic HTTP server that outputs a simple HTML view, while the &lt;code>maincaller&lt;/code> module will call functions from &lt;code>backend&lt;/code>.&lt;/p>
&lt;p>We shall look into:&lt;/p>
&lt;ol>
&lt;li>Initializing Go modules and packages.&lt;/li>
&lt;li>Using &lt;code>go mod edit&lt;/code> and &lt;code>go mod tidy&lt;/code> to set up local imports without publishing packages.&lt;/li>
&lt;li>Testing the interaction between these modules and calling one from the other.&lt;/li>
&lt;/ol>
&lt;p>Let&amp;rsquo;s get started!&lt;/p></description></item><item><title>Setting Up a React.js Webpack and Typescript App From Scratch using Todo App</title><link>http://laminsanneh.com/posts/2024-07-19-setting-up-a-react.js-webpack-and-typescript-app-from-scratch-using-todo-app/</link><pubDate>Mon, 22 Jul 2024 11:30:00 +0000</pubDate><guid>http://laminsanneh.com/posts/2024-07-19-setting-up-a-react.js-webpack-and-typescript-app-from-scratch-using-todo-app/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>In this tutorial, we&amp;rsquo;ll set up a React.js Todo application using TypeScript and Webpack from scratch. This will include configuring Webpack to handle TypeScript and React code, setting up a development server, and building our project for production.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;ul>
&lt;li>Node.js and npm installed on your machine.&lt;/li>
&lt;li>Basic understanding of React.js, TypeScript, and Webpack.&lt;/li>
&lt;/ul>
&lt;h3 id="project-setup">Project Setup&lt;/h3>
&lt;p>First, let&amp;rsquo;s create a new directory for our project and initialize a new Node.js project.&lt;/p></description></item><item><title>Playwright and React.js Typescript Todo App Automated End to End Testing with Vite</title><link>http://laminsanneh.com/posts/playwright-react-js-typescript-todo-app-automated-testing-vite/</link><pubDate>Tue, 09 Jul 2024 20:22:16 +0000</pubDate><guid>http://laminsanneh.com/posts/playwright-react-js-typescript-todo-app-automated-testing-vite/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>In this tutorial, we&amp;rsquo;ll create a simple Todo app using React.js and TypeScript, initialized with Vite, and then we&amp;rsquo;ll write tests for it using &lt;a href="https://playwright.dev/" target="_blank" rel="noopener">Playwright&lt;/a>. We will use playwright to do an end to end test which will simulate the user browser interaction with our todo app like adding new todos, deleting todos, upadtinhg todos e.t.c. By the end of this guide, you&amp;rsquo;ll have a solid understanding of how to use Playwright to test your React applications.&lt;/p></description></item><item><title>React.js Typescript Todo App Testing with Jest and React Testing Library and Vite</title><link>http://laminsanneh.com/posts/react-js-typescript-todo-app-testing-jest-react-testing-library-vite/</link><pubDate>Sun, 30 Jun 2024 14:24:14 +0000</pubDate><guid>http://laminsanneh.com/posts/react-js-typescript-todo-app-testing-jest-react-testing-library-vite/</guid><description>&lt;h4 id="introduction">Introduction&lt;/h4>
&lt;p>In this tutorial, we shall setup &lt;a href="https://jestjs.io/" target="_blank" rel="noopener">Jest&lt;/a> and &lt;a href="https://testing-library.com/docs/react-testing-library/intro/" target="_blank" rel="noopener">React Testing Library&lt;/a> to perform integration test. We will be testing React.Js components, so this will not be an end to test, but we will be testing the individual coponents involved in the Todo App. At each stage, we will render the components invovled using the library functions provided by React Testing Library. We shall pass in properties to each component and test their behavious and visualisation by simulating clicks and text typing into textboxes using the appropriate functions. Jest will be used as our test runner. These two libraries are independent but work very well together. So let&amp;rsquo;s get started.&lt;/p></description></item><item><title>How to Dockerize a Laravel 11 and React 18 Application for Development</title><link>http://laminsanneh.com/posts/dockerize-laravel-11-react-18-application-development/</link><pubDate>Tue, 25 Jun 2024 13:03:26 +0000</pubDate><guid>http://laminsanneh.com/posts/dockerize-laravel-11-react-18-application-development/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>Docker has become a popular choice for development environments due to its ability to containerize applications and simplify deployment across different systems. This guide will walk you through dockerizing a Laravel 11 backend and React 18 frontend application, using Docker Compose to orchestrate multiple services. We wil assume that your laravel and react apps live in seperate folders and will be served through different domain. Suffice to say that the react app will not be served from the laravel backend but will use the laravel backend only as an api service.&lt;/p></description></item><item><title>Laravel and React.Js User Roles and Permissions Management with simple Blog</title><link>http://laminsanneh.com/personalprojects/laravel-react-js-user-roles-permissions-management-simple-blog/</link><pubDate>Mon, 24 Jun 2024 07:51:15 +0000</pubDate><guid>http://laminsanneh.com/personalprojects/laravel-react-js-user-roles-permissions-management-simple-blog/</guid><description/></item><item><title>React.js How to use User Roles to Secure Frontend Menu Links and Routes Using a Wrapper Component for User Authentication and Backend Permission Control</title><link>http://laminsanneh.com/posts/react-js-user-roles-secure-frontend-menu-links-routes-wrapper-component-user-authentication-backend-permission-control/</link><pubDate>Sun, 23 Jun 2024 12:35:17 +0000</pubDate><guid>http://laminsanneh.com/posts/react-js-user-roles-secure-frontend-menu-links-routes-wrapper-component-user-authentication-backend-permission-control/</guid><description>&lt;p>In modern web applications, managing user authentication and permissions is crucial. One effective way to handle this in React.js is by using a wrapper component. This article will guide you through creating a wrapper component that controls access to routes and links based on user roles and permissions. We will leverage Redux Toolkit to manage user state and permissions.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>Before we start, make sure you have the following setup:&lt;/p></description></item><item><title>Java Springboot backend and ReactNative Money Transfer Android Mobile and Web Application</title><link>http://laminsanneh.com/personalprojects/java-springboot-backend-reactnative-money-transfer-android-mobile-web-application/</link><pubDate>Sat, 22 Jun 2024 20:58:05 +0000</pubDate><guid>http://laminsanneh.com/personalprojects/java-springboot-backend-reactnative-money-transfer-android-mobile-web-application/</guid><description/></item><item><title>How to Use React.js useEffect to Replace Class-Based Lifecycle Methods</title><link>http://laminsanneh.com/posts/react-js-useeffect-replace-class-based-lifecycle-methods/</link><pubDate>Fri, 21 Jun 2024 15:45:50 +0000</pubDate><guid>http://laminsanneh.com/posts/react-js-useeffect-replace-class-based-lifecycle-methods/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>React has undergone significant changes over the years, and one of the most notable updates is the introduction of hooks in version 16.8. Hooks allow developers to use state and other React features without writing a class. Among these hooks, useEffect stands out as a powerful replacement for the various lifecycle methods found in class components. This article will guide you through replacing class-based lifecycle methods with useEffect in functional components, complete with detailed code snippets.&lt;/p></description></item><item><title>Laravel and ReactNative Medical Appintment App</title><link>http://laminsanneh.com/personalprojects/laravel-reactnative-medical-appintment-app/</link><pubDate>Thu, 20 Jun 2024 12:59:41 +0000</pubDate><guid>http://laminsanneh.com/personalprojects/laravel-reactnative-medical-appintment-app/</guid><description/></item><item><title>How to Make a Dynamic Multi Checkbox System in React.js Seamlessly</title><link>http://laminsanneh.com/posts/dynamic-multi-checkbox-system-react-js-seamlessly/</link><pubDate>Wed, 19 Jun 2024 15:11:57 +0000</pubDate><guid>http://laminsanneh.com/posts/dynamic-multi-checkbox-system-react-js-seamlessly/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>Creating a dynamic multi-checkbox system in React.js can be a powerful way to allow users to select multiple options, such as user roles, in an intuitive and interactive manner. In this blog post, we&amp;rsquo;ll walk through a complete example of how to implement such a system, focusing on updating the state based on user interactions and fetching initial data from an external source. Let&amp;rsquo;s dive into the code and explore each part of the implementation.&lt;/p></description></item><item><title>How to Use Laravel 11 Gates and Policies to Secure Your Application Data through Your Controllers and Routes</title><link>http://laminsanneh.com/posts/laravel-11-gates-policies-secure-application-data-controllers-routes/</link><pubDate>Tue, 18 Jun 2024 19:44:58 +0000</pubDate><guid>http://laminsanneh.com/posts/laravel-11-gates-policies-secure-application-data-controllers-routes/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>Securing your application data is a crucial aspect of building robust web applications. Laravel 11 provides a powerful mechanism to handle authorization through Gates and Policies. This post will guide you through the process of using Gates and Policies to secure your application data within a controller, using a &lt;code>Post&lt;/code> model as an example.&lt;/p>
&lt;h3 id="what-are-gates-and-policies">What are Gates and Policies?&lt;/h3>
&lt;p>Gates and Policies are two complementary features in Laravel that help in authorizing actions. Gates provide a simple closure-based approach to authorization, whereas Policies are dedicated classes that group authorization logic for a specific model or resource.&lt;/p></description></item><item><title>React Redux Toolkit with Typescript How to Set Up, Understand, and Use the library in Your React.js App</title><link>http://laminsanneh.com/posts/react-redux-toolkit-typescript-set-understand-library-react-js-app/</link><pubDate>Tue, 18 Jun 2024 11:09:36 +0000</pubDate><guid>http://laminsanneh.com/posts/react-redux-toolkit-typescript-set-understand-library-react-js-app/</guid><description>&lt;p>Using typescript and integrating React Redux toolkit into your React application can enhance your state management, making your app more robust and scalable. Redux Toolkit simplifies this process by providing a set of tools and best practices. This guide will walk you through setting up Redux Toolkit in a React application, understanding its key components, and effectively using it to manage your app&amp;rsquo;s state.&lt;/p>
&lt;h3 id="step-1-setting-up-redux-toolkit">Step 1: Setting Up Redux Toolkit&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install @reduxjs/toolkit react-redux
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="configuring-the-store">Configuring the Store&lt;/h4>
&lt;p>In your project, create a file named store.ts for setting up the Redux store and reducers.&lt;/p></description></item><item><title>React.js useEffect How to prevent component weird bahaviour due to multiple out of order server fetches</title><link>http://laminsanneh.com/posts/react-js-useeffect-prevent-component-weird-bahaviour-due-multiple-order-server-fetches/</link><pubDate>Tue, 18 Jun 2024 10:02:40 +0000</pubDate><guid>http://laminsanneh.com/posts/react-js-useeffect-prevent-component-weird-bahaviour-due-multiple-order-server-fetches/</guid><description>&lt;p>To prevent out-of-sync React Redux toolkit dispatches or just plain react.js in general which could result in unexpected behaviors due to asynchronous server requests returning at different times, we need to ensure that we handle component unmounts or updates correctly. This ensures that when a component re-renders or unmounts, for several reasons like a user clicks on another link related to the same component, it does not attempt to set state based on outdated or irrelevant asynchronous responses.&lt;/p></description></item><item><title>Cypress and TypeScript React.js Todo App End-to-End Testing</title><link>http://laminsanneh.com/posts/cypress-typescript-react-js-todo-app-testing/</link><pubDate>Thu, 06 Jun 2024 09:42:58 +0000</pubDate><guid>http://laminsanneh.com/posts/cypress-typescript-react-js-todo-app-testing/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>In this tutorial, we will build a React.js Todo app using TypeScript, initialize the project using Vite, and set up Cypress for end-to-end (E2E) testing. We will cover all the steps, including project setup, writing the Todo app, and creating Cypress tests.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>Before we start, ensure you have the following installed on your machine:&lt;/p>
&lt;ul>
&lt;li>Node.js and npm (or yarn)&lt;/li>
&lt;li>A code editor (VS Code is recommended)&lt;/li>
&lt;/ul>
&lt;h3 id="initialize-the-project-with-vite">Initialize the Project with Vite&lt;/h3>
&lt;p>Let&amp;rsquo;s create a new React project using Vite.&lt;/p></description></item><item><title>Laravel 11 and React 18 Login and Registration tutorial with React Redux Toolkit</title><link>http://laminsanneh.com/posts/laravel-11-react-18-login-registration-tutorial-react-redux-toolkit/</link><pubDate>Tue, 28 May 2024 09:17:32 +0000</pubDate><guid>http://laminsanneh.com/posts/laravel-11-react-18-login-registration-tutorial-react-redux-toolkit/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In this tutorial, we will be setting up an indepth tutorial guide of react.js and laravel 11 system for user authentication and registration. We will be using typescript on the react.js frontned, along with react redux toolkit, but do not worry as youc an follow along even if you only know javascript. React redux toolkit helps with state management. It might be overkill for a simple login registration app like this, but makes life very easy once the app codebase grows. Users will be able to register using an email as their username and password. After successful registration, they shall be able to login. We wil demonstrate the login mechanism by having a userpforile area/route in the frontend of the application which will be locked and only accessible to logged in. The frontend and backend will be on different domains, so the after logging in, we will provide the user with a token, which will be stored in &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage" target="_blank" rel="noopener">localstorage&lt;/a> of the browser. This will be send along in the header each request which requires authentication to get data back from the server. We will also need to setup &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS" target="_blank" rel="noopener">cors&lt;/a> so that our frontend domain can send requests to the backend domanin app.&lt;/p></description></item><item><title>What is Technical Debt?</title><link>http://laminsanneh.com/posts/technical-debt/</link><pubDate>Mon, 02 Sep 2013 09:10:47 +0000</pubDate><guid>http://laminsanneh.com/posts/technical-debt/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>As someone who crunches out code, whether moderately or a lot if you’re like me. You must have incurred some technical debt somewhere along the lines.&lt;/p>
&lt;h2 id="development-approaches">Development approaches&lt;/h2>
&lt;p>Technical debt is the term given to a certain programming scenario. Assume you had a project with a target deadline. As the technical lead of the project, you are sometimes faced with two decisions which are:&lt;/p>
&lt;h2 id="the-long-and-proper-way">The long and proper way&lt;/h2>
&lt;p>Using this approach is the most ideal way of development. Many best practises of development are followed using this way.&lt;/p></description></item><item><title>How to set up live reload in 5 easy steps</title><link>http://laminsanneh.com/posts/set-live-reload-5-easy-steps/</link><pubDate>Sun, 16 Jun 2013 09:23:11 +0000</pubDate><guid>http://laminsanneh.com/posts/set-live-reload-5-easy-steps/</guid><description>&lt;h2 id="manual-all-the-way">Manual all the way!&lt;/h2>
&lt;p>When you start out web developing, the appeal to do a lot of stuff manually might be appealing. However, once you step into intermediate to advanced level you will probably be constantly searching for tools to help automate your workflow. One such tool for me is Live Reload.&lt;/p>
&lt;p>If you are wondering what this tool does. It enables you to see html changes instantly in your browser as you type. All this happens withou you needing to refresh your browser on every change to your markup. The reload is done by the tool automatically&lt;/p></description></item><item><title>Underscore js, the missing Linq for c-sharp developers</title><link>http://laminsanneh.com/posts/2013-05-22-underscore-js-the-missing-linq-for-c-sharp-developers/</link><pubDate>Wed, 22 May 2013 12:50:17 +0000</pubDate><guid>http://laminsanneh.com/posts/2013-05-22-underscore-js-the-missing-linq-for-c-sharp-developers/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>We all have our favourite languages that we feel most comfortable with for various reasons. One such language for me is the c-sharp language. One of the primary reasons why I love the language is a really cool feature called Linq.&lt;/p>
&lt;p>I simply cannot emphasize the amount of time this feature has saved me while doing work. It integrates seamlessly into my workflow and find myself almost subconsciously using it. And did I say super awesome chaining you could do as well just like in jquery.&lt;/p></description></item><item><title>Html5 localStorage, dead simple</title><link>http://laminsanneh.com/posts/html5-localstorage-dead-simple/</link><pubDate>Sat, 20 Apr 2013 09:16:52 +0000</pubDate><guid>http://laminsanneh.com/posts/html5-localstorage-dead-simple/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Lets get something straight, this stuff (Html5 localStorage) should be simple, dead simple, so here we go.&lt;/p>
&lt;h2 id="storing-simple-data-eg-numbers-and-strings">Storing Simple Data (e.g. numbers and strings)&lt;/h2>
&lt;p>localStorage.setItem(keyName, myString);&lt;/p>
&lt;p>Notice the capital letter “S“ in localStorage , its necessary.&lt;/p>
&lt;p>Don’t worry localStorage is a global variable in your browser, so use it freely from anywhere.&lt;/p>
&lt;h2 id="retrieving-simple-data">Retrieving Simple Data&lt;/h2>
&lt;p>localStorage.getItem(keyName);&lt;/p>
&lt;h2 id="storing-object">Storing Object&lt;/h2>
&lt;p>localStorage.setItem(keyName, JSON.stringify(yourObject));&lt;/p>
&lt;p>When storing objects, you would want to serialize your object into a string using “JSON.stringify(yourObject)” because local storage only stores simple data (i.e. numbers and strings), so you object gets converted into a json string.&lt;/p></description></item><item><title>What is Cross Origin Resource Sharing and when to use it?</title><link>http://laminsanneh.com/posts/cross-origin-resource-sharing/</link><pubDate>Mon, 08 Apr 2013 09:32:53 +0000</pubDate><guid>http://laminsanneh.com/posts/cross-origin-resource-sharing/</guid><description>&lt;h2 id="the-problem">The Problem&lt;/h2>
&lt;p>When developing highly ajax enabled applications using javascript, you may not always be fortunate to have both the client and server side of the application be hosted on the same domain. You might be asking, what does this mean? Good question.&lt;/p>
&lt;p>I am confident that you know what a domain is. If not, then have a quick look here at the wikipedia article. Ok, so lets say you have a domain named &lt;a href="http://www.mydomain.com" target="_blank" rel="noopener">http://www.mydomain.com&lt;/a>.&lt;/p></description></item><item><title>Staying Sane among all the craziness (keeping up with technology)</title><link>http://laminsanneh.com/posts/staying-sane-craziness-keeping-technology/</link><pubDate>Sat, 06 Apr 2013 09:07:20 +0000</pubDate><guid>http://laminsanneh.com/posts/staying-sane-craziness-keeping-technology/</guid><description>&lt;h2 id="a-wisemans-advice">A wiseman’s advice&lt;/h2>
&lt;p>My dad once told me boy. Yes, literally, “boy” was the nickname he gave me for some reason. He said “you will never be satisfied if you always want to keep up with the latest and greatest gadgets”. He also said that sometimes its ok to be behind schedule a little bit. You see, my thought as a young, gadget addicted teenager was that. “This was some excuse he’d come up with just to have some breathing space from getting me the latest video games”. How naive I was though.&lt;/p></description></item><item><title>How learning a new programming language can help you become a better programmer?</title><link>http://laminsanneh.com/posts/learning-programming-language-programmer/</link><pubDate>Tue, 19 Feb 2013 09:20:41 +0000</pubDate><guid>http://laminsanneh.com/posts/learning-programming-language-programmer/</guid><description>&lt;h2 id="my-theory">My Theory&lt;/h2>
&lt;p>I came into first year at the University of Manchester, with a fair knowledge of programming in Java. I was fully aware that there were people out there who were well versed in other languages and using it to solve real life problems. Even with this knowledge, I did not even bother to look into any other because I hadn’t yet known the importance of learning a new programming language. I was under the impression that Java was all I needed to know. That if I knew it well enough, it could easily solve any problem I wanted to.&lt;/p></description></item><item><title>Understanding the ASP.NET MVC 4 Project Structure and Folders</title><link>http://laminsanneh.com/posts/understanding-asp-net-mvc-4-project-structure-folders/</link><pubDate>Sun, 10 Feb 2013 09:24:20 +0000</pubDate><guid>http://laminsanneh.com/posts/understanding-asp-net-mvc-4-project-structure-folders/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>When I first started doing Net Mvc programming, one of the first stumbling block I had was understanding the Asp.Net MVC 4 project structure and folders. So I decided to share some of what I know now that I’m comfortable with them. This tutorial applies to both Visual Studio 2010 and Visual Studio 2012, sorry Visual studio 2008 and Visual studio 2005 folks, I was not programming .Net and or C# back in those days. This is not a What is Visual Studio tutorial, but I have a separate post coming up soon for that if you’re new to it as well. The language does not matter, either C# or Visual Basic will do. We’ll use a new Asp.Net MVC3/4 web application as the example for this post.&lt;/p></description></item><item><title>Go বেসিক</title><link>http://laminsanneh.com/notes/go/basic/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/basic/_index.bn/</guid><description/></item><item><title>Introduction</title><link>http://laminsanneh.com/notes/go/basic/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/basic/introduction/</guid><description>&lt;!-- A Sample Program -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Hello World&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>A sample go program is show here.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">message&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">greetMe&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;world&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">message&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">greetMe&lt;/span>(&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>) &lt;span style="color:#66d9ef">string&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello, &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run the program as below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ go run hello.go
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Declaring Variables -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Variables&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>&lt;strong>Normal Declaration:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">msg&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">msg&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;Hello&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;div class="card">
&lt;div class="card-body">&lt;p>&lt;strong>Shortcut:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">msg&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Declaring Constants -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Constants&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">Phi&lt;/span> = &lt;span style="color:#ae81ff">1.618&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Basic Types</title><link>http://laminsanneh.com/notes/go/basic/types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/basic/types/</guid><description>&lt;!-- String Type -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Strings&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">str&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Multiline string&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">str&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#e6db74">`Multiline
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">string`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Number Types -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Numbers&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;p>Typical types&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">num&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#75715e">// int
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">num&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">3.&lt;/span> &lt;span style="color:#75715e">// float64
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">num&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">4i&lt;/span> &lt;span style="color:#75715e">// complex128
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">num&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> byte(&lt;span style="color:#e6db74">&amp;#39;a&amp;#39;&lt;/span>) &lt;span style="color:#75715e">// byte (alias for uint8)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Other Types&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">u&lt;/span> &lt;span style="color:#66d9ef">uint&lt;/span> = &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#75715e">// uint (unsigned)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#66d9ef">float32&lt;/span> = &lt;span style="color:#ae81ff">22.7&lt;/span> &lt;span style="color:#75715e">// 32-bit float
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!----------- Arrays ------>
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Arrays&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// var numbers [5]int
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">numbers&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> [&lt;span style="color:#f92672">...&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>{&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Pointers -->
&lt;div class="note-card medium-note">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Pointers&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span> () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">b&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">getPointer&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Value is&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">b&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">getPointer&lt;/span> () (&lt;span style="color:#a6e22e">myPointer&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">a&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">234&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">a&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> new(&lt;span style="color:#66d9ef">int&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span> = &lt;span style="color:#ae81ff">234&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pointers point to a memory location of a variable. Go is fully garbage-collected.&lt;/p></description></item><item><title>অ্যাডভান্সড</title><link>http://laminsanneh.com/notes/go/advanced/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/advanced/_index.bn/</guid><description/></item><item><title>Flow Control</title><link>http://laminsanneh.com/notes/go/basic/flow-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/basic/flow-control/</guid><description>&lt;!-- Condition -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Condition&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">day&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;sunday&amp;#34;&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">day&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;saturday&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">rest&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">day&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;monday&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">isTired&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">groan&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">work&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">doThing&lt;/span>(); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Uh oh&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Switch -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Switch&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">switch&lt;/span> &lt;span style="color:#a6e22e">day&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#34;sunday&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// cases don&amp;#39;t &amp;#34;fall through&amp;#34; by default!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">fallthrough&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#34;saturday&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">rest&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">work&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Loop -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Loop&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">count&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">count&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>; &lt;span style="color:#a6e22e">count&lt;/span>&lt;span style="color:#f92672">++&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;My counter is at&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">count&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">entry&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> []&lt;span style="color:#66d9ef">string&lt;/span>{&lt;span style="color:#e6db74">&amp;#34;Jack&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;John&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;Jones&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">val&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">entry&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;At position %d, the character %s is present\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">val&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">42&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">guess&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>File Manipulation</title><link>http://laminsanneh.com/notes/go/advanced/files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/advanced/files/</guid><description>&lt;!-- Condition -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Condition&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">day&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;sunday&amp;#34;&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">day&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;saturday&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">rest&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">day&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;monday&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">isTired&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">groan&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">work&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">doThing&lt;/span>(); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Uh oh&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Bash Variables</title><link>http://laminsanneh.com/notes/bash/basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/bash/basic/</guid><description>&lt;!-- Variable -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Variable&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>NAME&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;John&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo $NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$NAME&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;!-- Condition -->
&lt;div class="note-card ">
&lt;div class="item">
&lt;h5 class="note-title">&lt;span>Condition&lt;/span>&lt;/h5>
&lt;div class="card">
&lt;div class="card-body">&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> -z &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$string&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;String is empty&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">elif&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> -n &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$string&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;String is not empty&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Go এর নোট সমূহ</title><link>http://laminsanneh.com/notes/go/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/go/_index.bn/</guid><description>&lt;h1 id="go-notes">Go Notes&lt;/h1></description></item><item><title>নোট সমূহ</title><link>http://laminsanneh.com/notes/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/_index.bn/</guid><description/></item><item><title>ব্যাশের নোট সমূহ</title><link>http://laminsanneh.com/notes/bash/_index.bn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://laminsanneh.com/notes/bash/_index.bn/</guid><description>&lt;h1 id="bash-notes">Bash Notes&lt;/h1></description></item></channel></rss>