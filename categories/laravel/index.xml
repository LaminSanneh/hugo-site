<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Laravel on Lamin Sanneh</title><link>http://laminsanneh.com/categories/laravel/</link><description>Recent content in Laravel on Lamin Sanneh</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 25 Jun 2024 13:03:26 +0000</lastBuildDate><atom:link href="http://laminsanneh.com/categories/laravel/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Dockerize a Laravel 11 and React 18 Application for Development</title><link>http://laminsanneh.com/posts/dockerize-laravel-11-react-18-application-development/</link><pubDate>Tue, 25 Jun 2024 13:03:26 +0000</pubDate><guid>http://laminsanneh.com/posts/dockerize-laravel-11-react-18-application-development/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>Docker has become a popular choice for development environments due to its ability to containerize applications and simplify deployment across different systems. This guide will walk you through dockerizing a Laravel 11 backend and React 18 frontend application, using Docker Compose to orchestrate multiple services. We wil assume that your laravel and react apps live in seperate folders and will be served through different domain. Suffice to say that the react app will not be served from the laravel backend but will use the laravel backend only as an api service.&lt;/p></description></item><item><title>Laravel 11 and React 18 Login and Registration tutorial with React Redux Toolkit</title><link>http://laminsanneh.com/posts/laravel-11-react-18-login-registration-tutorial-react-redux-toolkit/</link><pubDate>Tue, 28 May 2024 09:17:32 +0000</pubDate><guid>http://laminsanneh.com/posts/laravel-11-react-18-login-registration-tutorial-react-redux-toolkit/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In this tutorial, we will be setting up an indepth tutorial guide of react.js and laravel 11 system for user authentication and registration. We will be using typescript on the react.js frontned, along with react redux toolkit, but do not worry as youc an follow along even if you only know javascript. React redux toolkit helps with state management. It might be overkill for a simple login registration app like this, but makes life very easy once the app codebase grows. Users will be able to register using an email as their username and password. After successful registration, they shall be able to login. We wil demonstrate the login mechanism by having a userpforile area/route in the frontend of the application which will be locked and only accessible to logged in. The frontend and backend will be on different domains, so the after logging in, we will provide the user with a token, which will be stored in &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage" target="_blank" rel="noopener">localstorage&lt;/a> of the browser. This will be send along in the header each request which requires authentication to get data back from the server. We will also need to setup &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS" target="_blank" rel="noopener">cors&lt;/a> so that our frontend domain can send requests to the backend domanin app.&lt;/p></description></item></channel></rss>